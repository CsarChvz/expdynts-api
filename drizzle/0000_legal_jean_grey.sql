CREATE TYPE "public"."estado_busqueda" AS ENUM('CHECKED', 'UNCHECKED');--> statement-breakpoint
CREATE TYPE "public"."estado_expediente" AS ENUM('ACTIVE', 'ARCHIVED');--> statement-breakpoint
CREATE TYPE "public"."extracto" AS ENUM('ZM', 'FRNS', 'PENALT', 'POPF', 'LABORAL');--> statement-breakpoint
CREATE TABLE "expdynts_acuerdos_historial" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "expdynts_acuerdos_historial_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"expediente_id" integer NOT NULL,
	"acuerdos" json NOT NULL,
	"hash" varchar(255) NOT NULL,
	"created_at" timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL
);
--> statement-breakpoint
CREATE TABLE "expdynts_busqueda_check" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "expdynts_busqueda_check_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"status" "estado_busqueda" DEFAULT 'CHECKED' NOT NULL,
	"descripcion" text,
	"ultima_ejecucion" timestamp,
	"created_at" timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp NOT NULL
);
--> statement-breakpoint
CREATE TABLE "expdynts_expedientes" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "expdynts_expedientes_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"exp" integer NOT NULL,
	"fecha" integer NOT NULL,
	"extracto" "extracto" NOT NULL,
	"cve_juz" varchar(255) NOT NULL,
	"acuerdos_json" json NOT NULL,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "expdynts_post" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "expdynts_post_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(256),
	"createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updatedAt" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE "expdynts_usuario_attributes" (
	"usuario_id" integer PRIMARY KEY NOT NULL,
	"nombre_usuario" varchar(255),
	"apellido" varchar(255),
	"phone_number" varchar(15),
	"preferencias" json,
	"created_at" timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp NOT NULL
);
--> statement-breakpoint
CREATE TABLE "expdynts_usuario_expedientes" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "expdynts_usuario_expedientes_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"usuario_id" integer NOT NULL,
	"expediente_id" integer NOT NULL,
	"status" "estado_expediente" DEFAULT 'ACTIVE' NOT NULL,
	"created_at" timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp NOT NULL
);
--> statement-breakpoint
CREATE TABLE "expdynts_usuarios" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "expdynts_usuarios_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"external_id" varchar(255),
	"email" varchar(255) NOT NULL,
	"created_at" timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp NOT NULL,
	CONSTRAINT "expdynts_usuarios_external_id_unique" UNIQUE("external_id"),
	CONSTRAINT "expdynts_usuarios_email_unique" UNIQUE("email")
);
--> statement-breakpoint
ALTER TABLE "expdynts_acuerdos_historial" ADD CONSTRAINT "expdynts_acuerdos_historial_expediente_id_expdynts_expedientes_id_fk" FOREIGN KEY ("expediente_id") REFERENCES "public"."expdynts_expedientes"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "expdynts_usuario_attributes" ADD CONSTRAINT "expdynts_usuario_attributes_usuario_id_expdynts_usuarios_id_fk" FOREIGN KEY ("usuario_id") REFERENCES "public"."expdynts_usuarios"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "expdynts_usuario_expedientes" ADD CONSTRAINT "expdynts_usuario_expedientes_usuario_id_expdynts_usuarios_id_fk" FOREIGN KEY ("usuario_id") REFERENCES "public"."expdynts_usuarios"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "expdynts_usuario_expedientes" ADD CONSTRAINT "expdynts_usuario_expedientes_expediente_id_expdynts_expedientes_id_fk" FOREIGN KEY ("expediente_id") REFERENCES "public"."expdynts_expedientes"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
CREATE INDEX "acuerdos_historial_expediente_idx" ON "expdynts_acuerdos_historial" USING btree ("expediente_id");--> statement-breakpoint
CREATE INDEX "acuerdos_historial_created_idx" ON "expdynts_acuerdos_historial" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX "busqueda_check_ejecucion_idx" ON "expdynts_busqueda_check" USING btree ("ultima_ejecucion");--> statement-breakpoint
CREATE INDEX "expedientes_exp_idx" ON "expdynts_expedientes" USING btree ("exp");--> statement-breakpoint
CREATE INDEX "name_idx" ON "expdynts_post" USING btree ("name");--> statement-breakpoint
CREATE INDEX "usuario_attributes_phone_idx" ON "expdynts_usuario_attributes" USING btree ("phone_number");--> statement-breakpoint
CREATE UNIQUE INDEX "usuario_expediente_unq" ON "expdynts_usuario_expedientes" USING btree ("usuario_id","expediente_id");--> statement-breakpoint
CREATE INDEX "usuario_expedientes_status_idx" ON "expdynts_usuario_expedientes" USING btree ("status") WHERE status = 'ACTIVE';--> statement-breakpoint
CREATE INDEX "usuarios_email_idx" ON "expdynts_usuarios" USING btree ("email");--> statement-breakpoint
CREATE VIEW "public"."vista_expedientes_usuario" AS (select "expdynts_usuarios"."id", "expdynts_usuarios"."email", "expdynts_usuario_attributes"."nombre_usuario", "expdynts_usuario_attributes"."apellido", "expdynts_expedientes"."id", "expdynts_expedientes"."exp", "expdynts_expedientes"."fecha", "expdynts_expedientes"."extracto", "expdynts_expedientes"."cve_juz", "expdynts_expedientes"."acuerdos_json", "expdynts_usuario_expedientes"."status", "expdynts_usuario_expedientes"."created_at" from "expdynts_usuarios" inner join "expdynts_usuario_attributes" on "expdynts_usuarios"."id" = "expdynts_usuario_attributes"."usuario_id" inner join "expdynts_usuario_expedientes" on "expdynts_usuarios"."id" = "expdynts_usuario_expedientes"."usuario_id" inner join "expdynts_expedientes" on "expdynts_usuario_expedientes"."expediente_id" = "expdynts_expedientes"."id");--> statement-breakpoint
CREATE VIEW "public"."vista_historial_acuerdos" AS (select "expdynts_acuerdos_historial"."id", "expdynts_expedientes"."id", "expdynts_expedientes"."exp", "expdynts_expedientes"."extracto", "expdynts_expedientes"."cve_juz", "expdynts_acuerdos_historial"."acuerdos", "expdynts_acuerdos_historial"."hash", "expdynts_acuerdos_historial"."created_at" from "expdynts_acuerdos_historial" inner join "expdynts_expedientes" on "expdynts_acuerdos_historial"."expediente_id" = "expdynts_expedientes"."id" order by "expdynts_expedientes"."id" asc, "expdynts_acuerdos_historial"."created_at" desc);--> statement-breakpoint
CREATE VIEW "public"."vista_ultimas_busquedas" AS (select "expdynts_busqueda_check"."id", "expdynts_busqueda_check"."status", "expdynts_busqueda_check"."descripcion", "expdynts_busqueda_check"."ultima_ejecucion", COUNT("expdynts_expedientes"."id") as "total_expedientes_encontrados" from "expdynts_busqueda_check" left join "expdynts_expedientes" on "expdynts_expedientes"."created_at" > "expdynts_busqueda_check"."ultima_ejecucion" group by "expdynts_busqueda_check"."id", "expdynts_busqueda_check"."status", "expdynts_busqueda_check"."descripcion", "expdynts_busqueda_check"."ultima_ejecucion" order by "expdynts_busqueda_check"."ultima_ejecucion" desc);--> statement-breakpoint
CREATE VIEW "public"."vista_expedientes_ultimo_acuerdo" AS (select "expdynts_expedientes"."id", "expdynts_expedientes"."exp", "expdynts_expedientes"."fecha", "expdynts_expedientes"."extracto", "expdynts_expedientes"."cve_juz", "expdynts_expedientes"."acuerdos_json", "expdynts_expedientes"."created_at", "expdynts_expedientes"."updated_at", "ultimo_acuerdo", "fecha_ultimo_acuerdo", "hash_ultimo_acuerdo", "historial_id_ultimo_acuerdo" from "expdynts_expedientes" left join (select "expediente_id", 
        json_agg(acuerdos ORDER BY created_at DESC LIMIT 1)
       as "ultimo_acuerdo", 
        max(created_at)
       as "fecha_ultimo_acuerdo", 
        (array_agg(hash ORDER BY created_at DESC LIMIT 1))[1]
       as "hash_ultimo_acuerdo", 
        (array_agg(id ORDER BY created_at DESC LIMIT 1))[1]
       as "historial_id_ultimo_acuerdo" from "expdynts_acuerdos_historial" group by "expdynts_acuerdos_historial"."expediente_id") "latest_acuerdo" on "expdynts_expedientes"."id" = "latest_acuerdo"."expediente_id" order by "fecha_ultimo_acuerdo" desc, "expdynts_expedientes"."id" desc);